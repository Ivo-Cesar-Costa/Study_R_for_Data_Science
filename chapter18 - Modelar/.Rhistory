?updateR
?updateR()
install.packages(c("bit", "data.table", "DT", "e1071", "ggplot2", "isoband", "jsonlite", "lubridate", "maps", "modelr", "purrr", "RCurl", "tidyselect", "zoo"))
library(tidyverse)
library(modelr)
options(na.action = na.warn)
library(modelr)
options(na.action = na.warn)
sim1
ggplot(sim1, aes(x, y)) +
geom_point()
ggplot(sim1, aes(x, y))
ggplot(sim1, aes(x, y)) +
geom_point()
models <- tibble(
a1 = runif(250, -20, 40),
a2 = runif(250, -5, 5)
)
models
a2 = runif(250, -5)
a2
a2 = runif(25, -5)
a2
a2 = runif(25, -5, 5)
a2
models <- tibble(
a1 = runif(250, -20, 40),
a2 = runif(250, -5, 5)
)
ggplot(sim1, aes(x, y)) +
geom_abline(aes(intercept = a1, slope = a2), data = models, alpha = 1/4)
ggplot(sim1, aes(x, y)) +
geom_abline(aes(intercept = a1, slope = a2), data = models, alpha = 1/4) +
geom_point()
model1 <- function(a, data) {
a[1] + data$x * a[2]
}
sim1
model1(c(7, 1.5), sim1)
measure_distance <- function(mod, data) {
diff <- data$y - model1(mod, data)
sqrt(mean(diff ^ 2))
}
measure_distance(c(7, 1.5), sim1)
sim1_dist <- function(a1, a2) {
measure_distance(c(a1, a2), sim1)
}
models
models %>%
mutate(dist = purrr::map2_dbl(a1, a2, sim1_dist))
a1
models <- models %>%
mutate(dist = purrr::map2_dbl(a1, a2, sim1_dist))
models
ggplot(sim1, aes(x, y))
ggplot(sim1, aes(x, y)) +
geom_point(size = 2, colour = "grey30")
ggplot(sim1, aes(x, y)) +
geom_point(size = 10, colour = "grey30")
ggplot(sim1, aes(x, y)) +
geom_point(size = 2, colour = "grey30") +
geom_abline(
aes(intercept = a1, slope = a2, colour = -dist),
data = filter(models, rank(dist) <= 10)
)
?-dist
?dist
ggplot(models, aes(a1, a2))
ggplot(models, aes(a1, a2)) +
geom_point(data = filter(models, rank(dist) <= 10), size = 4, colour = "red")
models
filter(models, rank(dist) <= 10)
ggplot(models, aes(a1, a2)) +
geom_point(filter(models, rank(dist) <= 10), size = 4, colour = "red")
ggplot(models, aes(a1, a2)) +
geom_point(filter(models, rank(dist) <= 10), size = 4, colour = "red")
ggplot(models, aes(a1, a2)) +
geom_point(data = filter(models, rank(dist) <= 10), size = 4, colour = "red")
ggplot(models, aes(a1, a2)) +
geom_point(data = filter(models, rank(dist) <= 10), size = 4, colour = "red") +
geom_point(aes(colour = -dist))
ggplot(models, aes(a1, a2)) +
geom_point(data = filter(models, rank(dist) <= 10), size = 4, colour = "red") +
geom_point(aes(colour = dist))
ggplot(models, aes(a1, a2)) +
geom_point(data = filter(models, rank(dist) <= 10), size = 4, colour = "red") +
geom_point(aes(colour = -dist))
ggplot(sim1, aes(x, y)) +
geom_point(size = 2, colour = "grey30") +
geom_abline(
aes(intercept = a1, slope = a2, colour = -dist),
data = filter(models, rank(dist) <= 10)
)
ggplot(sim1, aes(x, y)) +
geom_point(size = 2, colour = "grey30") +
geom_abline(
aes(intercept = a1, slope = a2, colour = dist),
data = filter(models, rank(dist) <= 10)
)
ggplot(sim1, aes(x, y)) +
geom_point(size = 2, colour = "grey30") +
geom_abline(
aes(intercept = a1, slope = a2, colour = -dist),
data = filter(models, rank(dist) <= 10)
)
expand.grid(
a1 = seq(-5, 20, length = 25),
a2 = seq(1, 3, length = 25)
)
expand.grid(
a1 = seq(-5, 20, length = 25),
a2 = seq(1, 3, length = 25)
) %>%
mutate(dist = purrr::map2_dbl(a1, a2, sim1_dist))
ggplot(aes(a1, a2))
grid %>%
ggplot(aes(a1, a2))
grid <- expand.grid(
a1 = seq(-5, 20, length = 25),
a2 = seq(1, 3, length = 25)
) %>%
mutate(dist = purrr::map2_dbl(a1, a2, sim1_dist))
grid %>%
ggplot(aes(a1, a2))
grid %>%
ggplot(aes(a1, a2)) +
geom_point(data = filter(grid, rank(dist) <= 10), size = 4, colour = "red")
grid %>%
ggplot(aes(a1, a2)) +
geom_point(data = filter(grid, rank(dist) <= 10), size = 4, colour = "red") +
geom_point(aes(colour = -dist))
ggplot(sim1, aes(x, y)) +
geom_point(size = 2, colour = "grey30") +
geom_abline(
aes(intercept = a1, slope = a2, colour = -dist),
data = filter(grid, rank(dist) <= 10)
)
ggplot(sim1, aes(x, y)) +
geom_point(size = 2, colour = "grey30") +
geom_abline(
aes(intercept = a1, slope = a2, colour = -dist),
data = filter(grid, rank(dist) <= 10)
)
ggplot(sim1, aes(x, y))
ggplot(sim1, aes(x, y)) +
geom_point(size = 2, colour = "grey30"
ggplot(sim1, aes(x, y)) +
ggplot(sim1, aes(x, y)) +
geom_point(size = 2, colour = "grey30")
ggplot(sim1, aes(x, y)) +
geom_point(size = 2, colour = "grey30") +
geom_abline(
aes(intercept = a1, slope = a2, colour = -dist),
data = filter(grid, rank(dist) <= 10)
)
optim(c(0, 0), measure_distance, data = sim1)
best <- optim(c(0, 0), measure_distance, data = sim1)
best$par
ggplot(sim1, aes(x, y)) +
geom_point(size = 2, colour = "grey30")
best$par[1]
ggplot(sim1, aes(x, y)) +
geom_point(size = 2, colour = "grey30") +
geom_abline(intercept = best$par[1], slope = best$par[2])
sim1_mod <- lm(y ~ x, data = sim1)
coef(sim1_mod)
lm(y ~ x, data = sim1)
sim1a <- tibble(
x = rep(1:10, each = 3),
y = x * 1.5 + 6 + rt(length(x), df = 2)
)
sim1a
x = rep(1:10, each = 3)
length(x)
rt(length(x), df = 2)
measure_distance <- function(mod, data) {
diff <- data$y - model1(mod, data)
mean(abs(diff))
}
model1 <- function(a, data) {
a[1] + data$x * a[2] + a[3]
}
sim1 %>%
data_grid(x)
sim1
grid <- sim1 %>%
data_grid(x)
grid
sim1_mod
grid <- grid %>%
add_predictions(sim1_mod)
grid
ggplot(sim1, aes(x))
ggplot(sim1, aes(x)) +
geom_point(aes(y = y))
ggplot(sim1, aes(x)) +
geom_point(aes(y = y)) +
geom_line(aes(y = pred), data = grid, colour = "red", size = 1)
sim1 <- sim1 %>%
add_residuals(sim1_mod)
sim1
ggplot(sim1, aes(resid))
ggplot(sim1, aes(resid)) +
geom_freqpoly(binwidth = 0.5)
sim1
sim1_mod
ggplot(sim1, aes(x, resid))
ggplot(sim1, aes(x, resid)) +
geom_ref_line(h = 0)
ggplot(sim1, aes(x, resid)) +
geom_ref_line(h = 0) +
geom_point()
?geom_ref_line
df <- tribble(
~y, ~x1, ~x2,
4, 2, 5,
5, 1, 6
)
df
model_matrix(df, y ~ x1)
model_matrix(df, y ~ x1 - 1)
model_matrix(df, y ~ x1 + x2)
df <- tribble(
~ sex, ~ response,
"male", 1,
"female", 2,
"male", 1
)
df
model_matrix(df, response ~ sex)
ggplot(sim2)
ggplot(sim2) +
geom_point(aes(x, y))
sim2
sim2 %>%
data_grid(x)
grid <- sim2 %>%
data_grid(x) %>%
add_predictions(mod2)
grid <- sim2 %>%
data_grid(x) %>%
add_predictions(mod2)
grid <- sim2 %>%
data_grid(x) %>%
add_predictions(mod2)
mod2
mod2 <- lm(y ~ x, data = sim2)
grid <- sim2 %>%
data_grid(x) %>%
add_predictions(mod2)
grid
mod2
sim2
mod2
grid <- sim2 %>%
data_grid(x) %>%
add_predictions(mod2)
grid
ggplot(sim2, aes(x))
ggplot(sim2, aes(x)) +
geom_point(aes(y = y))
grid
ggplot(sim2, aes(x)) +
geom_point(aes(y = y)) +
geom_point(data = grid, aes(y = pred), colour = "red", size = 4)
tibble(x = "e")
tibble(x = "e") %>%
add_predictions(mod2)
sim3
ggplot(sim3, aes(x1, y))
ggplot(sim3, aes(x1, y)) +
geom_point(aes(colour = x2))
mod1 <- lm(y ~ x1 + x2, data = sim3)
mod2 <- lm(y ~ x1 * x2, data = sim3)
mod1
sim3
sim3 %>%
data_grid(x1, x2)
grid <- sim3 %>%
data_grid(x1, x2) %>%
gather_predictions(mod1, mod2)
grid
ggplot(sim3, aes(x1, y, colour = x2))
ggplot(sim3, aes(x1, y, colour = x2)) +
geom_point()
grid
ggplot(sim3, aes(x1, y, colour = x2)) +
geom_point() +
geom_line(data = grid, aes(y = pred))
ggplot(sim3, aes(x1, y, colour = x2)) +
geom_point() +
geom_line(data = grid, aes(y = pred)) +
facet_wrap(~ model)
grid
sim3 <- sim3 %>%
gather_residuals(mod1, mod2)
sim3
sim3 %>%
gather_residuals(mod1, mod2)
sim3
ggplot(sim3, aes(x1, resid, colour = x2))
ggplot(sim3, aes(x1, resid, colour = x2)) +
geom_point()
ggplot(sim3, aes(x1, resid, colour = x2)) +
geom_point() +
facet_grid(model ~ x2)
model
model ~ x2
facet_grid(model ~ x2)
sim3
sim4
mod1 <- lm(y ~ x1 + x2, data = sim4)
mod2 <- lm(y ~ x1 * x2, data = sim4)
sim4 %>%
data_grid(
x1 = seq_range(x1, 5),
x2 = seq_range(x2, 5)
)
grid <- sim4 %>%
data_grid(
x1 = seq_range(x1, 5),
x2 = seq_range(x2, 5)
) %>%
gather_predictions(mod1, mod2)
grid
x1
sim4 %>%
data_grid(
x1 = seq_range(x1, 5),
x2 = seq_range(x2, 5)
)
seq_range(c(0.0123, 0.923423), n = 5)
seq_range(c(0.0123, 0.923423), n = 5, pretty = TRUE)
x1 <- rcauchy(100)
x1
seq_range(x1, n = 5)
seq_range(x1, n = 5, trim = 0.10)
seq_range(x1, n = 5, trim = 0.25)
seq_range(x1, n = 5, trim = 0.50)
x2 <- c(0, 1)
seq_range(x2, n = 5)
x2
seq_range(x2, n = 5, expand = 0.10)
seq_range(x2, n = 5, expand = 0.25)
seq_range(x2, n = 5, expand = 0.50)
ggplot(grid, aes(x1, x2))
grid
ggplot(grid, aes(x1, x2)) +
geom_tile(aes(fill = pred))
ggplot(grid, aes(x1, x2)) +
geom_tile(aes(fill = pred)) +
facet_wrap(~ model)
ggplot(grid, aes(x1, pred, colour = x2, group = x2)) +
geom_line()
grid
ggplot(grid, aes(x1, pred, colour = x2, group = x2))
ggplot(grid, aes(x1, pred, colour = x2, group = x2)) +
geom_line()
ggplot(grid, aes(x1, pred, colour = x2, group = x2)) +
geom_line() +
facet_wrap(~ model)
ggplot(grid, aes(x2, pred, colour = x1, group = x1)) +
geom_line() +
facet_wrap(~ model)
ggplot(grid, aes(x1, pred, colour = x2, group = x2)) +
geom_line() +
facet_wrap(~ model)
ggplot(grid, aes(x2, pred, colour = x1, group = x1)) +
geom_line() +
facet_wrap(~ model)
df <- tribble(
~y, ~x,
1,  1,
2,  2,
3,  3
)
df
model_matrix(df, y ~ x^2 + x)
model_matrix(df, y ~ I(x^2) + x)
model_matrix(df, y ~ poly(x, 2))
library(splines)
model_matrix(df, y ~ ns(x, 2))
sim5 <- tibble(
x = seq(0, 3.5 * pi, length = 50),
y = 4 * sin(x) + rnorm(length(x))
)
sim5
ggplot(sim5, aes(x, y)) +
geom_point()
mod1 <- lm(y ~ ns(x, 1), data = sim5)
mod2 <- lm(y ~ ns(x, 2), data = sim5)
mod3 <- lm(y ~ ns(x, 3), data = sim5)
mod4 <- lm(y ~ ns(x, 4), data = sim5)
mod5 <- lm(y ~ ns(x, 5), data = sim5)
sim5 %>%
data_grid(x = seq_range(x, n = 50, expand = 0.1))
sim5
grid <- sim5 %>%
data_grid(x = seq_range(x, n = 50, expand = 0.1)) %>%
gather_predictions(mod1, mod2, mod3, mod4, mod5, .pred = "y")
grid
sim5
ggplot(sim5, aes(x, y))
ggplot(sim5, aes(x, y)) +
geom_point()
ggplot(sim5, aes(x, y)) +
geom_point() +
geom_line(data = grid, colour = "red")
ggplot(sim5, aes(x, y)) +
geom_point() +
geom_line(data = grid, colour = "red") +
facet_wrap(~ model)
grid
df <- tribble(
~x, ~y,
1, 2.2,
2, NA,
3, 3.5,
4, 8.3,
NA, 10
)
df
mod <- lm(y ~ x, data = df)
mod <- lm(y ~ x, data = df, na.action = na.exclude)
mod
nobs(mod)
