library(ggplot2)
library(dplyr)
smaller <- diamonds %>%
filter(carat <= 2.5)
smaller %>%
ggplot(aes(carat)) +
geom_freqpoly(binwidth = 0.01)
smaller %>%
ggplot(aes(carat)) +
geom_freqpoly(binwidth = 0.01)
library(ggplot2)
library(dplyr)
smaller <- diamonds %>%
filter(carat <= 2.5)
library(ggplot2)
library(dplyr)
smaller <- diamonds %>%
filter(carat <= 2.5)
library(ggplot2)
library(dplyr)
smaller <- diamonds %>%
filter(carat <= 2.5)
smaller %>%
ggplot(aes(carat)) +
geom_freqpoly(binwidth = 0.01)
rmarkdown::render("Diamonds.Rmd")
rmarkdown::render("Diamonds.Rmd")
library("ggplot2")
library("dplyr")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(echo = FALSE)
library("ggplot2")
library("dplyr")
smaller <- diamonds %>%
filter(carat <= 2.5)
# Hide objects and functions ONLY used inline
n_larger <- nrow(diamonds) - nrow(smaller)
pct_larger <- n_larger / nrow(diamonds) * 100
comma <- function(x) {
format(x, digits = 2, big.mark = ",")
}
ggplot(diamonds, aes(y = carat, x = cut)) +
geom_boxplot()
ggplot(diamonds, aes(y = carat, x = color)) +
geom_boxplot()
ggplot(diamonds, aes(y = carat, x = clarity)) +
geom_boxplot()
smaller %>%
ggplot(aes(carat)) +
geom_freqpoly(binwidth = 0.01)
diamonds %>%
arrange(desc(carat)) %>%
slice(1:20) %>%
select(carat, cut, color, clarity) %>%
knitr::kable(
caption = "The largest 20 diamonds in the `diamonds` dataset."
)
diamonds %>%
arrange(desc(carat)) %>%
slice(1:20) %>%
select(carat, cut, color, clarity) %>%
knitr::kable(
caption = "The largest 20 diamonds in the `diamonds` dataset."
)
diamonds %>%
arrange(desc(carat)) %>%
slice(1:20) %>%
select(carat, cut, color, clarity) %>%
knitr::kable(
caption = "The largest 20 diamonds in the `diamonds` dataset."
)
mtcars[1:5, ]
knitr::kable(
mtcars[1:5, ],
caption = "A knitr kable."
)
knitr::kable(
mtcars[1:5, ],
caption = "A knitr kable."
)
knitr::opts_chunk$set(
comment = "#>",
collapse = TRUE
)
knitr::opts_chunk$set(
echo = FALSE
)
comma <- function(x) format(x, digits = 2, big.mark = ",")
comma(3452345)
comma(.12358124331)
source("C:/Users/Ivo/Downloads/Linguagem R/R_para_Data_Science/chapter21 - R Markdown/chapter21.R", echo=TRUE)
source("C:/Users/Ivo/Downloads/Linguagem R/R_para_Data_Science/chapter21 - R Markdown/chapter21.R", echo=TRUE)
source("C:/Users/Ivo/Downloads/Linguagem R/R_para_Data_Science/chapter21 - R Markdown/chapter21.R", echo=TRUE)
library(ggplot2)
library(dplyr)
class <- mpg %>% filter(class == params$my_class)
mpg
ggplot(class, aes(displ, hwy)) +
geom_point() +
geom_smooth(se = FALSE)
knit_with_parameters("C:/Users/Ivo/Downloads/Linguagem R/R_para_Data_Science/chapter21 - R Markdown/params.Rmd")
rmarkdown::render("fuel-economy.Rmd", params = list(my_class = "suv"))
mpg$class
reports <- tibble(
class = unique(mpg$class),
filename = stringr::str_c("fuel-economy-", class, ".html"),
params = purrr::map(class, ~ list(my_class = .))
)
reports
reports
reports %>%
select(output_file = filename, params)
reports %>%
select(output_file = filename, params) %>%
purrr::pwalk(rmarkdown::render, input = "fuel-economy.Rmd")
rmarkdown
rmarkdown::render
reports %>%
select(output_file = filename, params) %>%
purrr::pwalk(rmarkdown::render, input = "fuel-economy.Rmd")
reports
reports %>%
select(output_file = filename, params)
reports %>%
select(output_file = filename, params) %>%
purrr::pwalk(rmarkdown::render, input = "fuel-economy.Rmd")
reports %>%
select(output_file = filename, params) %>%
purrr::pwalk(rmarkdown::render, input = "fuel-economy.Rmd")
